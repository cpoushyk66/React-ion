{"ast":null,"code":"var _jsxFileName = \"/home/cpoushyk/Development/code/phase-3/project/reaction/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"../App.css\";\nimport Navbar from \"./NavBar\";\nimport Home from \"./Home\";\nimport Town from \"./Town\";\nimport ProfileBar from \"./ProfileBar\";\nimport CreateUserForm from \"./CreateUserForm\";\nimport Shop from \"./Shop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentCharacter, setCurrentCharacter] = useState(null);\n  const [newUsername, setUsername] = useState(\"\");\n  const [newPassword, setPassword] = useState(\"\");\n  const [newProfileImg, setProfileImg] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:9292/users\").then(res => res.json()).then(usersData => {\n      setUsers(usersData);\n      first_login(usersData[0]);\n    });\n  }, [currentCharacter]);\n\n  function first_login(user) {\n    fetch(`http://localhost:9292/user/${user.id}`).then(res => res.json()).then(user2 => {\n      setCurrentUser(user2);\n\n      if (user2.charcters != nil && user2.last_character_used != null) {\n        setCurrentCharacter(user2.characters.find(character => character.id == user2.last_character_used));\n      } else if (user2.charcters != nil && user2.last_character_used == null) {\n        fetch(`http://localhost:9292/character/${user2.characters[0].id}/set-as-last`);\n      }\n    });\n  } //User Functions\n\n\n  function handleCurrentUser(user) {\n    fetch(`http://localhost:9292/user/${user.id}/log_in`).then(res => res.json()).then(userF => {\n      setCurrentUser(userF);\n      let tempUsers = [...users];\n      return tempUsers.map(userM => {\n        if (userM.id == userF.id) {\n          userM.last_logged_in = userF.last_logged_in;\n        }\n\n        return userM;\n      });\n    });\n  }\n\n  function selectCharacter(char) {\n    console.log(\"boop\");\n    fetch(`http://localhost:9292/character/${char.id}`).then(res => res.json()).then(setCurrentCharacter);\n  }\n\n  function handleUpdateFormUsername(e) {\n    setUsername(e.target.value);\n  }\n\n  function handleUpdateFormPassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleUpdateFormProfileImg(e) {\n    setProfileImg(e.target.value);\n  }\n\n  function handleAddUser(e) {\n    e.preventDefault();\n    let newUser = {\n      username: newUsername,\n      password: newPassword,\n      img_url: newProfileImg\n    };\n    fetch(\"http://localhost:9292/users\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    }).then(res => res.json()).then(user => setUsers([...users, user]));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App`,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), users.length > 0 && currentUser != null ? /*#__PURE__*/_jsxDEV(ProfileBar, {\n      selectCharacter: selectCharacter,\n      users: users,\n      currentUser: currentUser,\n      handleCurrentUser: handleCurrentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 56\n    }, this) : /*#__PURE__*/_jsxDEV(CreateUserForm, {\n      handleAddUser: handleAddUser,\n      newUsername: newUsername,\n      onChangeUsername: handleUpdateFormUsername,\n      newPassword: newPassword,\n      onChangePassword: handleUpdateFormPassword,\n      newProfileImg: newProfileImg,\n      onChangeProfileImg: handleUpdateFormProfileImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/town\",\n        element: /*#__PURE__*/_jsxDEV(Town, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"shop\",\n        element: /*#__PURE__*/_jsxDEV(Shop, {\n          currentCharacter: currentCharacter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"d57sHhkH3xas5eexSx40YhcIzuA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cpoushyk/Development/code/phase-3/project/reaction/src/components/App.js"],"names":["React","useState","useEffect","Routes","Route","Navbar","Home","Town","ProfileBar","CreateUserForm","Shop","App","users","setUsers","currentUser","setCurrentUser","currentCharacter","setCurrentCharacter","newUsername","setUsername","newPassword","setPassword","newProfileImg","setProfileImg","fetch","then","res","json","usersData","first_login","user","id","user2","charcters","nil","last_character_used","characters","find","character","handleCurrentUser","userF","tempUsers","map","userM","last_logged_in","selectCharacter","char","console","log","handleUpdateFormUsername","e","target","value","handleUpdateFormPassword","handleUpdateFormProfileImg","handleAddUser","preventDefault","newUser","username","password","img_url","method","headers","body","JSON","stringify","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"../App.css\";\nimport Navbar from \"./NavBar\";\nimport Home from \"./Home\";\nimport Town from \"./Town\";\nimport ProfileBar from \"./ProfileBar\";\nimport CreateUserForm from \"./CreateUserForm\";\nimport Shop from \"./Shop\";\n\nfunction App() {\n\n    const [users, setUsers] = useState([])\n    const [currentUser, setCurrentUser] = useState(null)\n    const [currentCharacter, setCurrentCharacter] = useState(null)\n    const [newUsername, setUsername] = useState(\"\")\n    const [newPassword, setPassword] = useState(\"\")\n    const [newProfileImg, setProfileImg] = useState(\"\")\n\n\n    useEffect(() => {\n        fetch(\"http://localhost:9292/users\")\n        .then(res => res.json())\n        .then(usersData => {\n            setUsers(usersData)\n            first_login(usersData[0])\n        })\n\n    }, [currentCharacter])\n\n\n    function first_login(user) {\n        fetch(`http://localhost:9292/user/${user.id}`)\n        .then(res => res.json())\n        .then(user2 => {\n            setCurrentUser(user2)\n            if (user2.charcters != nil && user2.last_character_used != null)\n            {\n                setCurrentCharacter(user2.characters.find(character => character.id == user2.last_character_used))\n            }\n            else if (user2.charcters != nil && user2.last_character_used == null)\n            {\n                fetch(`http://localhost:9292/character/${user2.characters[0].id}/set-as-last`)\n            }\n        })    \n\n    }\n    //User Functions\n    function handleCurrentUser(user)\n    {\n        fetch(`http://localhost:9292/user/${user.id}/log_in`)\n        .then(res => res.json())\n        .then(userF => {\n            setCurrentUser(userF)\n            let tempUsers = [...users]\n            return tempUsers.map(userM => {\n                if (userM.id == userF.id) \n                {\n                    userM.last_logged_in = userF.last_logged_in\n                }\n                return userM\n            })\n        })\n\n    }\n\n    function selectCharacter(char) {\n        console.log(\"boop\")\n        fetch(`http://localhost:9292/character/${char.id}`)\n        .then(res => res.json())\n        .then(setCurrentCharacter)\n\n    }\n\n    function handleUpdateFormUsername(e) {\n        setUsername(e.target.value)\n    }\n\n    function handleUpdateFormPassword(e) {\n        setPassword(e.target.value)\n    }\n\n    function handleUpdateFormProfileImg(e) {\n        setProfileImg(e.target.value)\n    }\n\n    function handleAddUser(e) {\n        e.preventDefault()\n        let newUser = {\n            username: newUsername,\n            password: newPassword,\n            img_url: newProfileImg\n        }\n\n        fetch(\"http://localhost:9292/users\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newUser)\n        })\n        .then(res => res.json())\n        .then(user => setUsers([...users, user]))\n    }\n\n\n    return(\n        <div className={`App`}>\n            <Navbar/>\n            {users.length > 0 && currentUser != null ? <ProfileBar selectCharacter={selectCharacter} users={users} currentUser={currentUser} handleCurrentUser={handleCurrentUser}/> :\n            <CreateUserForm handleAddUser={handleAddUser} newUsername={newUsername} onChangeUsername={handleUpdateFormUsername} newPassword={newPassword} onChangePassword={handleUpdateFormPassword} newProfileImg={newProfileImg} onChangeProfileImg={handleUpdateFormProfileImg}/>}\n            \n            <Routes>\n                <Route path=\"/\" element={<Home/>} />\n                <Route path=\"/town\" element={<Town/>} />\n                <Route path=\"shop\" element={<Shop currentCharacter={currentCharacter}/>} />\n            </Routes>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}