{"ast":null,"code":"var _jsxFileName = \"/home/cpoushyk/Development/code/phase-3/project/reaction/src/components/DungeonRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DungeonRoom() {\n  _s();\n\n  const [enemy, setEnemy] = useState({});\n  useEffect(() => {\n    fetch(\"http://localhost:9292/enemy/rand\").then(res => res.json()).then(prepEnemy);\n  });\n\n  function prepEnemy(enemy_default) {\n    let tempEnemy = { ...enemy_default\n    };\n    tempEnemy.hp_max = tempEnemy.constitution * 10;\n    tempEnemy.current_hp = tempEnemy.hp_max;\n    tempEnemy.mp_max = tempEnemy.intelligence * 10;\n    tempEnemy.current_mp = tempEnemy.mp_max;\n    setEnemy(tempEnemy);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: enemy.hp_max != undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Enemy: \", enemy.name, \" the \", enemy.race]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Health: \", enemy.current_hp, \" / \", enemy.hp_max]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DungeonRoom, \"mvh5fN36fVzWFnHhug0sTr5KecU=\");\n\n_c = DungeonRoom;\nexport default DungeonRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"DungeonRoom\");","map":{"version":3,"sources":["/home/cpoushyk/Development/code/phase-3/project/reaction/src/components/DungeonRoom.js"],"names":["React","useState","useEffect","DungeonRoom","enemy","setEnemy","fetch","then","res","json","prepEnemy","enemy_default","tempEnemy","hp_max","constitution","current_hp","mp_max","intelligence","current_mp","undefined","name","race"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,SAFN;AAGH,GAJQ,CAAT;;AAMA,WAASA,SAAT,CAAmBC,aAAnB,EAAkC;AAE9B,QAAIC,SAAS,GAAG,EAAC,GAAGD;AAAJ,KAAhB;AACAC,IAAAA,SAAS,CAACC,MAAV,GAAmBD,SAAS,CAACE,YAAV,GAAyB,EAA5C;AACAF,IAAAA,SAAS,CAACG,UAAV,GAAuBH,SAAS,CAACC,MAAjC;AACAD,IAAAA,SAAS,CAACI,MAAV,GAAmBJ,SAAS,CAACK,YAAV,GAAyB,EAA5C;AACAL,IAAAA,SAAS,CAACM,UAAV,GAAuBN,SAAS,CAACI,MAAjC;AAEAX,IAAAA,QAAQ,CAACO,SAAD,CAAR;AAEH;;AACD,sBACI;AAAA,cACKR,KAAK,CAACS,MAAN,IAAgBM,SAAhB,gBAA4B;AAAA,8BAEzB;AAAA,8BAAYf,KAAK,CAACgB,IAAlB,WAA6BhB,KAAK,CAACiB,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFyB,eAGzB;AAAA,+BAAajB,KAAK,CAACW,UAAnB,SAAkCX,KAAK,CAACS,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHyB;AAAA;AAAA;AAAA;AAAA;AAAA,YAA5B,gBAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANb;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA/BQV,W;;KAAAA,W;AAiCT,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nfunction DungeonRoom() {\n\n    const [enemy, setEnemy] = useState({})\n\n    useEffect(() => {\n        fetch(\"http://localhost:9292/enemy/rand\")\n        .then(res => res.json())\n        .then(prepEnemy)\n    })\n\n    function prepEnemy(enemy_default) {\n        \n        let tempEnemy = {...enemy_default}\n        tempEnemy.hp_max = tempEnemy.constitution * 10\n        tempEnemy.current_hp = tempEnemy.hp_max\n        tempEnemy.mp_max = tempEnemy.intelligence * 10\n        tempEnemy.current_mp = tempEnemy.mp_max\n\n        setEnemy(tempEnemy)\n        \n    }\n    return(\n        <div>\n            {enemy.hp_max != undefined ? <div>\n\n                <h2>Enemy: {enemy.name} the {enemy.race}</h2>\n                <h3>Health: {enemy.current_hp} / {enemy.hp_max}</h3>\n                \n            </div> : <p>Loading</p>}\n        </div>\n        )\n}\n\nexport default DungeonRoom"]},"metadata":{},"sourceType":"module"}