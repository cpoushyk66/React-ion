{"ast":null,"code":"var _jsxFileName = \"/home/cpoushyk/Development/code/phase-3/project/reaction/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"../App.css\";\nimport Navbar from \"./NavBar\";\nimport Home from \"./Home\";\nimport Town from \"./Town\";\nimport ProfileBar from \"./ProfileBar\";\nimport CreateUserForm from \"./CreateUserForm\";\nimport Shop from \"./Shop\";\nimport Academy from \"./Academy\";\nimport LoginForm from \"./LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentCharacter, setCurrentCharacter] = useState(null);\n  const [newUsername, setUsername] = useState(\"\");\n  const [newPassword, setPassword] = useState(\"\");\n  const [newProfileImg, setProfileImg] = useState(\"\");\n  const [login, setLogin] = useState(false);\n  const [loginUser, setLoginUser] = useState(\"\");\n  const [loginPass, setLoginPass] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:9292/users\").then(res => res.json()).then(usersData => {\n      setUsers(usersData);\n    });\n    console.log(\"wow\");\n  }, [currentCharacter]);\n\n  function handleLogin() {\n    let user = users.find(user => user.username == loginUser && user.password == loginPass);\n\n    if (user != undefined) {\n      fetch(`http://localhost:9292/user/${user.id}`).then(res => res.json()).then(user2 => {\n        setCurrentUser(user2);\n\n        if (user2.characters != null && user2.last_character_used != null) {\n          fetch(`http://localhost:9292/character/${user2.characters[0].id}`).then(res => res.json()).then(setCurrentCharacter);\n        } else if (user2.characters.length > 0) {\n          fetch(`http://localhost:9292/character/${user2.characters[0].id}/set-as-last`).then(res => res.json()).then(setCurrentCharacter);\n        }\n      });\n      setLoginUser('');\n      setLoginPass('');\n      setLogin(false);\n    } else {\n      setLoginPass(\"\");\n      alert(\"Invalid Username/Password!\");\n    }\n  }\n\n  function updateCurrentCharacter(char) {\n    setCurrentCharacter(char);\n    updateCurrentUser();\n  }\n\n  function updateCurrentUser() {\n    fetch(`http://localhost:9292/user/${currentUser.id}`).then(res => res.json()).then(setCurrentUser);\n  } //User Functions\n\n\n  function handleCurrentUser(user) {\n    fetch(`http://localhost:9292/user/${user.id}/log_in`).then(res => res.json()).then(userF => {\n      setCurrentUser(userF);\n      let tempUsers = [...users];\n      return tempUsers.map(userM => {\n        if (userM.id == userF.id) {\n          userM.last_logged_in = userF.last_logged_in;\n        }\n\n        return userM;\n      });\n    });\n  }\n\n  function selectCharacter(char) {\n    console.log(\"boop\");\n    fetch(`http://localhost:9292/character/${char.id}`).then(res => res.json()).then(setCurrentCharacter);\n  }\n\n  function handleUpdateFormUsername(e) {\n    setUsername(e.target.value);\n  }\n\n  function handleUpdateFormPassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleUpdateFormProfileImg(e) {\n    setProfileImg(e.target.value);\n  }\n\n  function handleAddUser(e) {\n    e.preventDefault();\n    let newUser = {\n      username: newUsername,\n      password: newPassword,\n      img_url: newProfileImg\n    };\n    fetch(\"http://localhost:9292/users\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    }).then(res => res.json()).then(user => setUsers([...users, user]));\n    setUsername(\"\");\n    setPassword(\"\");\n    setProfileImg(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App`,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLogin(true),\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLogin(false),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), currentUser != null ? /*#__PURE__*/_jsxDEV(ProfileBar, {\n      selectCharacter: selectCharacter,\n      users: users,\n      currentUser: currentUser,\n      handleCurrentUser: handleCurrentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 36\n    }, this) : login ? /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(CreateUserForm, {\n      handleAddUser: handleAddUser,\n      newUsername: newUsername,\n      onChangeUsername: handleUpdateFormUsername,\n      newPassword: newPassword,\n      onChangePassword: handleUpdateFormPassword,\n      newProfileImg: newProfileImg,\n      onChangeProfileImg: handleUpdateFormProfileImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/town\",\n        element: /*#__PURE__*/_jsxDEV(Town, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"shop\",\n        element: /*#__PURE__*/_jsxDEV(Shop, {\n          updateCurrentCharacter: updateCurrentCharacter,\n          currentCharacter: currentCharacter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/academy\",\n        element: /*#__PURE__*/_jsxDEV(Academy, {\n          currentUser: currentUser,\n          currentCharacter: currentCharacter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"73OxEh9WUVI8dYr/O0l9txDY9wY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cpoushyk/Development/code/phase-3/project/reaction/src/components/App.js"],"names":["React","useState","useEffect","Routes","Route","Navbar","Home","Town","ProfileBar","CreateUserForm","Shop","Academy","LoginForm","App","users","setUsers","currentUser","setCurrentUser","currentCharacter","setCurrentCharacter","newUsername","setUsername","newPassword","setPassword","newProfileImg","setProfileImg","login","setLogin","loginUser","setLoginUser","loginPass","setLoginPass","fetch","then","res","json","usersData","console","log","handleLogin","user","find","username","password","undefined","id","user2","characters","last_character_used","length","alert","updateCurrentCharacter","char","updateCurrentUser","handleCurrentUser","userF","tempUsers","map","userM","last_logged_in","selectCharacter","handleUpdateFormUsername","e","target","value","handleUpdateFormPassword","handleUpdateFormProfileImg","handleAddUser","preventDefault","newUser","img_url","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"../App.css\";\nimport Navbar from \"./NavBar\";\nimport Home from \"./Home\";\nimport Town from \"./Town\";\nimport ProfileBar from \"./ProfileBar\";\nimport CreateUserForm from \"./CreateUserForm\";\nimport Shop from \"./Shop\";\nimport Academy from \"./Academy\";\nimport LoginForm from \"./LoginForm\";\n\nfunction App() {\n\n    const [users, setUsers] = useState([])\n    const [currentUser, setCurrentUser] = useState(null)\n    const [currentCharacter, setCurrentCharacter] = useState(null)\n    const [newUsername, setUsername] = useState(\"\")\n    const [newPassword, setPassword] = useState(\"\")\n    const [newProfileImg, setProfileImg] = useState(\"\")\n    const [login, setLogin] = useState(false);\n    const [loginUser, setLoginUser] = useState(\"\")\n    const [loginPass, setLoginPass] = useState(\"\")\n\n\n    useEffect(() => {\n        fetch(\"http://localhost:9292/users\")\n        .then(res => res.json())\n        .then(usersData => {\n            setUsers(usersData)\n            \n        })\n        console.log(\"wow\")\n\n    }, [currentCharacter])\n\n\n\n    function handleLogin() {\n\n        let user = users.find(user => user.username == loginUser && user.password == loginPass)\n        \n        if (user != undefined)\n        {\n\n            fetch(`http://localhost:9292/user/${user.id}`)\n            .then(res => res.json())\n            .then(user2 => {\n                setCurrentUser(user2)\n                if (user2.characters != null && user2.last_character_used != null)\n                {\n                    fetch(`http://localhost:9292/character/${user2.characters[0].id}`)\n                    .then(res => res.json())\n                    .then(setCurrentCharacter)\n                }\n                else if (user2.characters.length > 0)\n                {\n                    fetch(`http://localhost:9292/character/${user2.characters[0].id}/set-as-last`)\n                    .then(res => res.json())\n                    .then(setCurrentCharacter)\n                }\n            }) \n            \n            setLoginUser('')\n            setLoginPass('')\n            setLogin(false)\n            \n        }\n        else {\n            setLoginPass(\"\")\n            alert(\"Invalid Username/Password!\")\n        }\n    }\n\n    function updateCurrentCharacter(char) {\n        setCurrentCharacter(char)\n        updateCurrentUser()\n    }\n\n    function updateCurrentUser() {\n        fetch(`http://localhost:9292/user/${currentUser.id}`)\n        .then(res => res.json())\n        .then(setCurrentUser)\n    }\n\n    //User Functions\n    function handleCurrentUser(user)\n    {\n        fetch(`http://localhost:9292/user/${user.id}/log_in`)\n        .then(res => res.json())\n        .then(userF => {\n            setCurrentUser(userF)\n            let tempUsers = [...users]\n            return tempUsers.map(userM => {\n                if (userM.id == userF.id) \n                {\n                    userM.last_logged_in = userF.last_logged_in\n                }\n                return userM\n            })\n        })\n\n    }\n\n    function selectCharacter(char) {\n        console.log(\"boop\")\n        fetch(`http://localhost:9292/character/${char.id}`)\n        .then(res => res.json())\n        .then(setCurrentCharacter)\n\n    }\n\n    function handleUpdateFormUsername(e) {\n        setUsername(e.target.value)\n    }\n\n    function handleUpdateFormPassword(e) {\n        setPassword(e.target.value)\n    }\n\n    function handleUpdateFormProfileImg(e) {\n        setProfileImg(e.target.value)\n    }\n\n    function handleAddUser(e) {\n        e.preventDefault()\n        let newUser = {\n            username: newUsername,\n            password: newPassword,\n            img_url: newProfileImg\n        }\n\n        fetch(\"http://localhost:9292/users\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newUser)\n        })\n        .then(res => res.json())\n        .then(user => setUsers([...users, user]))\n\n        setUsername(\"\")\n        setPassword(\"\")\n        setProfileImg(\"\")\n    }\n\n\n    return(\n        <div className={`App`}>\n            <Navbar/>\n            <div>\n                <button onClick={() => setLogin(true)}>Log In</button>\n                <button onClick={() => setLogin(false)}>Sign Up</button>\n                \n            </div>\n            {currentUser != null ? <ProfileBar selectCharacter={selectCharacter} users={users} currentUser={currentUser} handleCurrentUser={handleCurrentUser}/> :\n            login ? <LoginForm />\n            : <CreateUserForm handleAddUser={handleAddUser} newUsername={newUsername} onChangeUsername={handleUpdateFormUsername} newPassword={newPassword} onChangePassword={handleUpdateFormPassword} newProfileImg={newProfileImg} onChangeProfileImg={handleUpdateFormProfileImg}/>}\n            \n            <Routes>\n                <Route path=\"/\" element={<Home/>} />\n                <Route path=\"/town\" element={<Town/>} />\n                <Route path=\"shop\" element={<Shop updateCurrentCharacter={updateCurrentCharacter} currentCharacter={currentCharacter}/>} />\n                <Route path=\"/academy\" element={<Academy currentUser={currentUser} currentCharacter={currentCharacter} />} />\n            </Routes>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}